{"version":3,"sources":["images/github.svg","images/profile_photo copy.JPG","images/linkedin2.svg","images/berlin.jpg","App.js","NavBar.js","AboutMe.js","Projects.js","Contact.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","rel","type","href","src","profile_photo","alt","width","to","style","textDecoration","color","id","linkedin","github","NavBar","props","state","url","page","window","location","toString","slice","indexOf","this","setState","params","React","Component","berlin","Contact","name","email","message","Routes","exact","path","component","withRouter","AboutMe","Projects","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.830b6a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.4b68bf6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile_photo copy.d20efbf3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/linkedin2.9a894325.svg\";","module.exports = __webpack_public_path__ + \"static/media/berlin.acec5a88.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport profile_photo from \"./images/profile_photo copy.JPG\";\nimport linkedin from \"./images/linkedin2.svg\";\nimport github from \"./images/github.svg\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"//fonts.googleapis.com/css?family=Nixie+One\"\n      />\n      <header className=\"App-header\">\n        <img\n          className={\"profile_photo\"}\n          src={profile_photo}\n          alt={\"\"}\n          width={350}\n        ></img>\n        <div className={\"text\"}>\n          <h3>Hi! I'm Larissa, a full stack software developer.</h3>\n          <div className={\"all_pages\"}>\n            <Link\n              to=\"/about\"\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <h5 className={\"pages\"}>About Me</h5>\n            </Link>{\" \"}\n            <h5>|</h5>\n            <Link\n              to=\"/projects\"\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <h5 className={\"pages\"}>Projects</h5>\n            </Link>{\" \"}\n            <h5>|</h5>\n            <Link\n              to=\"/contact\"\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <h5 className={\"pages\"}>Contact</h5>\n            </Link>\n          </div>\n          <div id={\"logos\"}>\n            <a href=\"https://www.linkedin.com/in/larissa-kobetz/\">\n              <img\n                className={\"logo\"}\n                id={\"linkedin\"}\n                src={linkedin}\n                alt={\"\"}\n              ></img>\n            </a>\n            <a href=\"https://github.com/lkobetz\">\n              <img\n                className={\"logo\"}\n                id={\"github\"}\n                src={github}\n                alt={\"\"}\n                width={50}\n              ></img>\n            </a>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\"\n    };\n  }\n  componentDidMount() {\n    let page = window.location.href.toString();\n    page = page.slice(page.indexOf(\"#\") + 2);\n    this.setState({ url: page });\n  }\n  render() {\n    return (\n      <nav id=\"navbar\">\n        <Link\n          params={\"home\"}\n          to=\"/\"\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          <h5>Home</h5>\n        </Link>\n        <Link\n          params={\"about\"}\n          to=\"/about\"\n          style={{\n            textDecoration: \"none\",\n            color: this.state.url === \"about\" ? \"#6600ff\" : \"black\"\n          }}\n        >\n          <h5>About Me</h5>\n        </Link>{\" \"}\n        <Link\n          params={\"projects\"}\n          to=\"/projects\"\n          style={{\n            textDecoration: \"none\",\n            color: this.state.url === \"projects\" ? \"#6600ff\" : \"black\"\n          }}\n        >\n          <h5>Projects</h5>\n        </Link>\n        <Link\n          params={\"contact\"}\n          to=\"/contact\"\n          style={{\n            textDecoration: \"none\",\n            color: this.state.url === \"contact\" ? \"#6600ff\" : \"black\"\n          }}\n        >\n          <h5>Contact</h5>\n        </Link>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"./App.css\";\nimport berlin from \"./images/berlin.jpg\";\n\nexport default props => {\n  return (\n    <div>\n      <NavBar />\n      <div id={\"aboutme\"}>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"//fonts.googleapis.com/css?family=Nixie+One\"\n        />\n        <div className={\"section_container\"}>\n          <div id={\"section\"}>\n            <div>\n              <h3>Bio:</h3>\n              <p>\n                <b>\n                  I am a Software Engineer with a background in English language\n                  education. While teaching, I loved finding creative ways to\n                  engage students in learning new concepts. <br></br>\n                  <br></br>While pursuing more automated, interactive tools to\n                  bring the concepts I was teaching to life, I was inspired to\n                  learn more about Technology. I wanted to learn the skills to\n                  build new and engaging products myself to improve user/learner\n                  experiences. <br></br>\n                  <br></br>After completing the Grace Hopper bootcamp, I became\n                  a Software Engineering Teaching Fellow there, combining my\n                  love of teaching and coding. Iâ€™ve become more and more\n                  fascinated with the possibilities Technology offers to solve\n                  complex problems, and am eager to launch a career that will\n                  allow me to explore the potential applications of Technology\n                  to improve our world.\n                </b>\n              </p>{\" \"}\n              <br></br>\n              <h3>Hobbies:</h3>\n              <p>\n                <b>\n                  I love traveling, reading, playing games and exploring. I've\n                  lived in England, Thailand, and Malaysia and have visited\n                  about 20 other countries.\n                </b>\n              </p>{\" \"}\n              <br></br>\n              <h3>Skills:</h3>\n              <p>\n                <b>\n                  Proficient: JavaScript, Node.js, Express.js, React, React\n                  Native, Redux, Git, Github, HTML, CSS, Sequelize <br></br>\n                  Familiar: SQL, PostgreSQL, Heroku, Firebase / Firestore, Viro\n                  React\n                </b>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className={\"photos\"}>\n          <img className={\"about_me_photo\"} src={berlin} alt={\"\"}></img>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\nimport Embed from \"react-embed\";\nimport github from \"./images/github.svg\";\n\nexport default props => {\n  return (\n    <div>\n      <link\n        rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"//fonts.googleapis.com/css?family=Nixie+One\"\n      />\n      <NavBar />\n      <div className={\"Section-header\"}>\n        <div id={\"projects\"}>\n          <div className={\"single_project\"}>\n            <div className={\"projects_title\"}>\n              <h3 className={\"project_item\"}>Grace In Space</h3>\n              <a href=\"https://github.com/graceinspace/graceInSpace\">\n                <img\n                  className={\"github_space\"}\n                  src={github}\n                  width={30}\n                  alt={\"\"}\n                ></img>\n              </a>\n            </div>\n            <h5 className={\"project_item\"}>\n              Grace in Space is a virtual reality mobile game in which players\n              help an elderly alien collect items that flew out of her bag while\n              she was traveling through space on vacation. <br />\n              <br />\n              It was built with JavaScript, React Native, Redux, Viro React,\n              Firebase, Firestore, and Git\n              <br />\n            </h5>\n            <Embed\n              className={\"project_item\"}\n              url={\n                \"https://www.youtube.com/watch?v=Tg7BLim7ues&list=PLx0iOsdUOUmnZXS2H9EDbhYMlmh3onWHs&index=6&t=0s&fbclid=IwAR2kzuxHrUMe7-RLOt7l7hPCf-cFQ_p8tWf3wwxrgjEzDnx_NX33A5o_Fb4\"\n              }\n            />\n            <br />\n            <Embed\n              url={\n                \"https://www.youtube.com/watch?v=-HUuZn3BKrQ&feature=youtu.be\"\n              }\n            />\n          </div>\n          <div className={\"single_project\"}>\n            <div className={\"projects_title\"}>\n              <h3 className={\"project_item\"}>Idiomatic</h3>\n              <a href=\"https://github.com/lkobetz/stackathon\">\n                <img\n                  className={\"github_space\"}\n                  src={github}\n                  width={30}\n                  alt={\"\"}\n                ></img>\n              </a>\n            </div>\n            <h5 className={\"project_item\"}>\n              Idiomatic is a mobile app that helps English language learners\n              practice their sentence structure and spelling while learning new\n              idioms. <br />\n              <br />\n              It was built with JavaScript, React Native, Node.js, and Git\n              <br />\n            </h5>\n            <Embed url={\"https://www.youtube.com/watch?v=nNw_wC0WL-Y\"} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n// import axios from \"axios\";\nimport NavBar from \"./NavBar\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"//fonts.googleapis.com/css?family=Nixie+One\"\n        />\n      </div>\n      // <div className=\"Contact\">\n      //   <link\n      //     rel=\"stylesheet\"\n      //     type=\"text/css\"\n      //     href=\"//fonts.googleapis.com/css?family=Lekton\"\n      //   />\n      //   <form\n      //     id=\"contact-form\"\n      //     onSubmit={this.handleSubmit.bind(this)}\n      //     method=\"POST\"\n      //   >\n      //     <div className=\"form-group\">\n      //       <label htmlFor=\"name\">Name</label>\n      //       <input\n      //         type=\"text\"\n      //         className=\"form-control\"\n      //         value={this.state.name}\n      //         onChange={this.onNameChange.bind(this)}\n      //       />\n      //     </div>\n      //     <div className=\"form-group\">\n      //       <label htmlFor=\"exampleInputEmail1\">Email address</label>\n      //       <input\n      //         type=\"email\"\n      //         className=\"form-control\"\n      //         aria-describedby=\"emailHelp\"\n      //         value={this.state.email}\n      //         onChange={this.onEmailChange.bind(this)}\n      //       />\n      //     </div>\n      //     <div className=\"form-group\">\n      //       <label htmlFor=\"message\">Message</label>\n      //       <textarea\n      //         className=\"form-control\"\n      //         rows=\"5\"\n      //         value={this.state.message}\n      //         onChange={this.onMessageChange.bind(this)}\n      //       />\n      //     </div>\n      //     <button type=\"submit\" className=\"btn btn-primary\">\n      //       Submit\n      //     </button>\n      //   </form>\n      // </div>\n    );\n  }\n\n  // onNameChange(event) {\n  //   this.setState({ name: event.target.value });\n  // }\n\n  // onEmailChange(event) {\n  //   this.setState({ email: event.target.value });\n  // }\n\n  // onMessageChange(event) {\n  //   this.setState({ message: event.target.value });\n  // }\n\n  // async handleSubmit(event) {\n  //   event.preventDefault();\n  //   // create another project in express and send this to that server\n  //   const response = await axios.post(\n  //     \"https://secret-harbor-77463.herokuapp.com/\",\n  //     this.state\n  //   ); // localhost: http://localhost:8000\n  //   console.log(\"response.data from axios\", response.data);\n  //   if (response.data.status === \"success\") {\n  //     alert(\"Message Sent.\");\n  //     this.resetForm();\n  //   } else if (response.data.status === \"fail\") {\n  //     alert(\"Message failed to send.\");\n  //   }\n  // }\n  // resetForm() {\n  //   this.setState({ name: \"\", email: \"\", message: \"\" });\n  // }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\n// import PropTypes from \"prop-types\";\nimport App from \"./App\";\nimport AboutMe from \"./AboutMe\";\nimport Projects from \"./Projects\";\nimport Contact from \"./Contact\";\n\nexport default class Routes extends Component {\n  componentDidMount() {\n    // this.props.loadInitialData()\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={withRouter(App)} />\n        <Route exact path=\"/about\" component={withRouter(AboutMe)} />\n        <Route exact path=\"/contact\" component={withRouter(Contact)} />\n        <Route exact path=\"/projects\" component={withRouter(Projects)} />\n      </Switch>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport Routes from \"./routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Routes />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}